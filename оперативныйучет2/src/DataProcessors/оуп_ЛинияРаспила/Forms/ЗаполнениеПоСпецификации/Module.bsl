#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	//TODO: Вставить содержимое обработчика
	Параметры.Свойство("ДатаСмены", Датасмены);
	Параметры.Свойство("Спецификация", Спецификация);
	КонтрольнаяТочка = ПараметрыСеанса.оуп_ТекущаяКонтрольнаяТочка;
	
	если 	не ЗначениеЗаполнено(ДатаСмены) или
			не ЗначениеЗаполнено(Спецификация) или
			не ЗначениеЗаполнено(КонтрольнаяТочка)	тогда
		Отказ = Истина;
		возврат;		
	КонецЕсли;
	
	Склад = КонтрольнаяТочка.Склад;
	
//	ЗаполнитьПараметрыСписков();
	ДобавитьКолонкиСкладов();
	ЗагрузитьДанныеВыпуска();
	ЗаполнитьМатериалы();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаСменыПриИзменении(Элемент)
	ЗагрузитьДанныеВыпуска();
	ЗаполнитьМатериалы();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВыходныеИзделия

&НаКлиенте
Процедура ВыходныеИзделияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	Отбор = новый Структура("Имя", Поле.Имя);
	Строки = СоответствиеСкладов.НайтиСтроки(Отбор);
	если строки.количество() = 0  Тогда  
		Возврат;
	КонецЕсли;
	
	текСтрока = элементы.ВыходныеИзделия.ТекущиеДанные;
	
	//@skip-check structure-consructor-too-many-keys
	ДопПараметры = Новый Структура("Склад, ТекущаяСтрока, ПолеИмя", 
		строки[0].Склад, 
		текСтрока,
		 Поле.Имя
	);
	
	Оповещение = новый ОписаниеОповещения("ЗавершениеВводаКоличества", ЭтотОбъект, ДопПараметры);
	//@skip-check structure-consructor-too-many-keys
	ПараметрыФормы = Новый Структура("ПлановыйВес, ПроверятьКоличество, Номенклатура, ТекстЗаголовка",
		текСтрока[Поле.Имя],
		Ложь,
		ТекСтрока.Номенклатура,
		"На склад " + строка(строки[0].Склад)
	);
	
	ОткрытьФорму("общаяформа.ФормаВводКоличества", 
		ПараметрыФормы, ЭтотОбъект,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМатериалы
&НаКлиенте
Процедура МатериалыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	текСтрока = Элементы.материалы.ТекущиеДанные;

	ДопПараметры = Новый Структура("ТекущаяСтрока",		текСтрока	);
	
	//@skip-check structure-consructor-too-many-keys
	ПараметрыФормы = Новый Структура("ПлановыйВес, ПроверятьКоличество, Номенклатура, ТекстЗаголовка",
		текСтрока["Количество"],
		Ложь,
		ТекСтрока.Номенклатура,
		"Со склада " + строка(Склад)
	);
	
	
	Оповещение = новый ОписаниеОповещения("ЗавершениеВводаКоличестваМатериалов", ЭтотОбъект, ДопПараметры);
	
	ОткрытьФорму("общаяформа.ФормаВводКоличества", 
		ПараметрыФормы, ЭтотОбъект,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

#КонецОбласти


//#Область ОбработчикиКомандФормы
//
//
//#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьКолонкиСкладов()
	
	оуп_ФормированиеФорм.ДобавитьКолонкиСкладовТаблицы(
		ЭтотОбъект,
		КонтрольнаяТочка.Склад,
		КонтрольнаяТочка.СкладыПолучатели,
		"ВыходныеИзделия", 
		СоответствиеСкладов, 
		Элементы.ВыходныеИзделия
	);
	

КонецПроцедуры // ДобавитьКолонкиСкладов()

&НаСервере
Процедура ЗагрузитьДанныеВыпуска()
	ИмяКолонкиКоличество = "Количество";
	СтрокаГруппировки = "Номенклатура";
	
	ПараметрыЗапроса = новый Структура;
	ПараметрыЗапроса.Вставить("Склад", 				Склад);
	ПараметрыЗапроса.Вставить("Спецификация", 		Спецификация);
	ПараметрыЗапроса.Вставить("ДатаСмены", 			ДатаСмены);
	ПараметрыЗапроса.Вставить("КонтрольнаяТочка", 	КонтрольнаяТочка);

	текТЗ = оуп_ОтчетВыпускаВызовСервера.ЗаполнитьТаблицуВыпускаПродукции(
		ПараметрыЗапроса,
		ИмяКолонкиКоличество,
		СтрокаГруппировки,
		"ВыходныеИзделия",
		"Склад",
		ЭтотОбъект );
	
	ЗначениеВРеквизитФормы(текТЗ, "ВыходныеИзделия");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМатериалы()
	ПараметрыЗапроса = новый Структура;
	ПараметрыЗапроса.Вставить("Склад", 				Склад);
	ПараметрыЗапроса.Вставить("Спецификация", 		Спецификация);
	ПараметрыЗапроса.Вставить("ДатаСмены", 			ДатаСмены);
	
	оуп_ОтчетВыпускаВызовСервера.ЗаполнитьТаблицуМатериалы(ПараметрыЗапроса, ЭтотОбъект);
	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗавершениеВводаКоличества(Результат, ДопПараметры) Экспорт
	если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	

	ПараметрыДокумента = новый Структура;
	ЗаполнитьЗависимыеПараметрыДокумента(ПараметрыДокумента);

	ПараметрыДокумента.Вставить("Спецификация", Спецификация);
	ПараметрыДокумента.Вставить("ДатаСмены", ДатаСмены);
	ПараметрыДокумента.Вставить("Склад", Склад);
	ПараметрыДокумента.Вставить("СкладПолучатель", ДопПараметры.Склад);
	ПараметрыДокумента.Вставить("Номенклатура", ДопПараметры.ТекущаяСтрока.Номенклатура);
	ПараметрыДокумента.Вставить("Количество", Результат.Количество);
	
	оуп_ОтчетВыпускаВызовСервера.ПровестиДокументОтчета(ПараметрыДокумента, "Выпуск");

	ЗагрузитьДанныеВыпуска();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеВводаКоличестваМатериалов(Результат, ДопПараметры) Экспорт
	если Результат = Неопределено Тогда
		возврат;
	КонецЕсли;
	
	ПараметрыДокумента = новый Структура;
	ЗаполнитьЗависимыеПараметрыДокумента(ПараметрыДокумента);
	
	ПараметрыДокумента.Вставить("Спецификация", Спецификация);
	ПараметрыДокумента.Вставить("ДатаСмены", ДатаСмены);
	ПараметрыДокумента.Вставить("Склад", Склад);
	ПараметрыДокумента.Вставить("Номенклатура", ДопПараметры.ТекущаяСтрока.Номенклатура);
	ПараметрыДокумента.Вставить("Количество", Результат.Количество);
	
	оуп_ОтчетВыпускаВызовСервера.ПровестиДокументОтчета(ПараметрыДокумента, "Материалы");
	ЗаполнитьМатериалы();
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьЗависимыеПараметрыДокумента(ПараметрыДокумента)
	ПараметрыДокумента.Вставить("Организация", КонтрольнаяТочка.Организация);
	ПараметрыДокумента.Вставить("Подразделение", КонтрольнаяТочка.Подразделение);
КонецПроцедуры


#КонецОбласти