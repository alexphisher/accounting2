#Область ПрограммныйИнтерфейс

функция ЗаполнитьТаблицуВыпускаПродукции(
	Параметры, // Структура параметров запроса
	ИмяКолонкиКоличество,
	СтрокаГруппировки,
	ИмяТЧ_ВыходныеИзделия,
	ИмяКолонкиСклада,
	Форма) Экспорт
	ТаблицаВыпуска = ПолучитьДанныеВыпуска(Параметры);
	
	СтрокиТовары = ТаблицаВыпуска.Скопировать();
	СтрокиТовары.Свернуть(СтрокаГруппировки, ИмяКолонкиКоличество);
		
	ТекТЗ = Форма[ИмяТЧ_ВыходныеИзделия].выгрузить();
	ТекТЗ.Очистить();
			
	для Каждого СтрокаТовар из СтрокиТовары Цикл 
		СтрокаВыходИзд = ТекТЗ.Добавить();//Форма[ИмяТЧ_ВыходныеИзделия].Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаВыходИзд, СтрокаТовар, СтрокаГруппировки);
		ОтборСтроки = новый Структура(СтрокаГруппировки);
		ЗаполнитьЗначенияСвойств(ОтборСтроки, СтрокаТовар);
		СтрокаВыходИзд.количество =  СтрокаТовар.Количество;
		
		
		СтрокиПоСкладам = ТаблицаВыпуска.НайтиСтроки(ОтборСтроки);
		для Каждого СтрокаПоСкладу из СтрокиПоСкладам Цикл 
			если не ЗначениеЗаполнено(СтрокаПоСкладу[ИмяКолонкиСклада]) Тогда 
				// Пустые строки со складами пропускаем...
				Продолжить;
			КонецЕсли;
			
			ТекИмяКолонки = оуп_ФормированиеФорм.ИмяКолонкиСклада(СтрокаПоСкладу[ИмяКолонкиСклада], Форма);
			
			СтрокаВыходИзд[ТекИмяКолонки] = СтрокаПоСкладу[ИмяКолонкиКоличество];
						
		КонецЦикла;
 		
	КонецЦикла;
	Возврат ТекТЗ;
КонецФункции

Процедура ЗаполнитьТаблицуМатериалы(Параметры, Форма, ИмяТЧ="Материалы") Экспорт
	ТаблицаМатериалов = ПолучитьДанныеПоМатериалам(Параметры);
	Форма[ИмяТЧ].Загрузить(ТаблицаМатериалов);
КонецПроцедуры

Процедура ПровестиДокументОтчета(Параметры, ИмяДокумента) Экспорт
	Попытка
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		
		если ИмяДокумента = "Выпуск" Тогда
			ТекДокумент = документы.оуп_СтрокаОтчетаПроизводстваВыпускПодукции.СоздатьДокумент();
		ИначеЕсли ИмяДокумента = "Материалы" Тогда 
			ТекДокумент = документы.оуп_СтрокаОтчетаПроизводстваСписаниеМатериалов.СоздатьДокумент();
		КонецЕсли;
		
		ТекДокумент.Дата = ТекущаяДатаСеанса();
		ЗаполнитьЗначенияСвойств(ТекДокумент, Параметры);
		
		ТекДокумент.Записать(РежимЗаписиДокумента.Проведение);
		если ТранзакцияАктивна() Тогда
			ЗафиксироватьТранзакцию();
		Иначе 
			ВызватьИсключение "Транзакция не активна!";
		КонецЕсли;
		
	Исключение
		если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		Сообщение = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписатьОшибку(Сообщение);
		ВызватьИсключение Сообщение;
	КонецПопытки;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеВыпуска(Параметры)
	запрос = новый запрос;
	Запрос.Текст = 	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&Склад
	|ПОМЕСТИТЬ втСклады
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КонтрольнаяТочкаСкладыПолучатели.Склад
	|ИЗ
	|	Справочник.КонтрольнаяТочка.СкладыПолучатели КАК КонтрольнаяТочкаСкладыПолучатели
	|ГДЕ
	|	КонтрольнаяТочкаСкладыПолучатели.Ссылка = &КонтрольнаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	оуп_ДанныеВыпускаПродукцииОстатки.Спецификация,
	|	оуп_ДанныеВыпускаПродукцииОстатки.Номенклатура,
	|	оуп_ДанныеВыпускаПродукцииОстатки.КоличествоОстаток КАК Количество,
	|	оуп_ДанныеВыпускаПродукцииОстатки.СкладПолучатель КАК Склад
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	РегистрНакопления.оуп_ДанныеВыпускаПродукции.Остатки(, Склад = &Склад
	|	И Спецификация = &Спецификация
	|	И ДатаСмены = &ДатаСмены
	|	И СкладПолучатель В
	|		(ВЫБРАТЬ
	|			вт.склад
	|		ИЗ
	|			втСклады КАК вт)) КАК оуп_ДанныеВыпускаПродукцииОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РесурсныеСпецификацииВыходныеИзделия.Номенклатура
	|ПОМЕСТИТЬ МассивТоваров
	|ИЗ
	|	Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК РесурсныеСпецификацииВыходныеИзделия
	|ГДЕ
	|	РесурсныеСпецификацииВыходныеИзделия.Ссылка = &Спецификация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	втТовары.Номенклатура
	|ИЗ
	|	втТовары КАК втТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МассивТоваров.Номенклатура,
	|	ЕСТЬNULL(втТовары.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
	|	ЕСТЬNULL(втТовары.Количество, 0) КАК Количество
	|ИЗ
	|	МассивТоваров КАК МассивТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТовары КАК втТовары
	|		ПО МассивТоваров.Номенклатура = втТовары.Номенклатура";
	запрос.УстановитьПараметр("Склад", Параметры.Склад);
	запрос.УстановитьПараметр("Спецификация", Параметры.Спецификация);
	запрос.УстановитьПараметр("ДатаСмены", Параметры.ДатаСмены);
	Запрос.УстановитьПараметр("КонтрольнаяТочка", Параметры.КонтрольнаяТочка);
	РезультатЗапроса = запрос.Выполнить().Выгрузить();
	возврат РезультатЗапроса;
КонецФункции

Функция ПолучитьДанныеПоМатериалам(Параметры)
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	оуп_ДанныеМатериаловВыпускаОстатки.ДатаСмены,
	|	оуп_ДанныеМатериаловВыпускаОстатки.Спецификация,
	|	оуп_ДанныеМатериаловВыпускаОстатки.Номенклатура,
	|	оуп_ДанныеМатериаловВыпускаОстатки.Склад,
	|	оуп_ДанныеМатериаловВыпускаОстатки.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ втМатериалы
	|ИЗ
	|	РегистрНакопления.оуп_ДанныеМатериаловВыпуска.Остатки(, ДатаСмены = &ДатаСмены
	|	И Спецификация = &Спецификация
	|	И Склад = &Склад) КАК оуп_ДанныеМатериаловВыпускаОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РесурсныеСпецификацииМатериалыИУслуги.Номенклатура
	|ПОМЕСТИТЬ втСпецификация
	|ИЗ
	|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК РесурсныеСпецификацииМатериалыИУслуги
	|ГДЕ
	|	РесурсныеСпецификацииМатериалыИУслуги.Ссылка = &Спецификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСпецификация.Номенклатура
	|ПОМЕСТИТЬ массивТоваров
	|ИЗ
	|	втСпецификация КАК втСпецификация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	втМатериалы.Номенклатура
	|ИЗ
	|	втМатериалы КАК втМатериалы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	массивТоваров.Номенклатура,
	|	ЕСТЬNULL(втМатериалы.Количество, 0) КАК Количество
	|ИЗ
	|	массивТоваров КАК массивТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМатериалы КАК втМатериалы
	|		ПО массивТоваров.Номенклатура = втМатериалы.Номенклатура";
	запрос.УстановитьПараметр("Склад", Параметры.Склад);
	запрос.УстановитьПараметр("Спецификация", Параметры.Спецификация);
	запрос.УстановитьПараметр("ДатаСмены", Параметры.ДатаСмены);
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
КонецФункции

Процедура ЗаписатьОшибку(Сообщение)
	ЗаписьЖурналаРегистрации("оуп_ОтчетВыпускаВызовСервера.ПровестиДокументСтрокаВыпуска", 
			УровеньЖурналаРегистрации.Ошибка, документы.оуп_СтрокаОтчетаПроизводстваВыпускПодукции, ,
			Сообщение
			
		);
КонецПроцедуры
#КонецОбласти
