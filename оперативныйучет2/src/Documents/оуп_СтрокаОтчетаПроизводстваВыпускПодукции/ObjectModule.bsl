#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//#Область ПрограммныйИнтерфейс
//
//
//
//#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)

	Попытка
		ДобавитьДвижениеПриход();
//		текОперация_ПартииВыпуска_Успешна = ПроверитьОстаток_ПартииВыпуска();
//		текОперация_ДанныеВыпуска_Успешна = ПроверитьОстатокДанныеВыпуска();
		
//		если не текОперация_ПартииВыпуска_Успешна или не текОперация_ДанныеВыпуска_Успешна Тогда
//			ВызватьИсключение "При выполнении операции нарушен баланс остатков !"
//				
//		КонецЕсли;
		
		
	Исключение
		// TODO:
		Отказ = Истина;
		сообщение = новый СообщениеПользователю();
		Сообщение.Текст = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()); 
		сообщение.Сообщить();
	КонецПопытки;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьДвижениеПриход()
	// регистр оуп_ДанныеВыпускаПродукции
	Движения.оуп_ДанныеВыпускаПродукции.Записывать = Истина;
	Движение = Движения.оуп_ДанныеВыпускаПродукции.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.ДатаСмены = ДатаСмены;
	Движение.Спецификация = Спецификация;
	Движение.Номенклатура = Номенклатура;
	Движение.Склад = Склад;
	Движение.СкладПолучатель = СкладПолучатель;
	Движение.Количество = Количество;

	// регистр оуп_ПартииВыпускаПродукции
	Движения.оуп_ПартииВыпускаПродукции.Записывать = Истина;
	Движение = Движения.оуп_ПартииВыпускаПродукции.Добавить();
	Движение.Период = Дата;
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.ДатаСмены = ДатаСмены;
	Движение.Спецификация = Спецификация;
	Движение.Склад = Склад;
	Движение.КоличествоВыпуск = Количество;
КонецПроцедуры

Функция ПроверитьОстаток_ПартииВыпуска()
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	оуп_ПартииВыпускаПродукцииОстатки.ДатаСмены,
		|	оуп_ПартииВыпускаПродукцииОстатки.Спецификация,
		|	оуп_ПартииВыпускаПродукцииОстатки.Склад,
		|	оуп_ПартииВыпускаПродукцииОстатки.КоличествоВыпускОстаток,
		|	оуп_ПартииВыпускаПродукцииОстатки.КоличествоСырьеОстаток
		|ИЗ
		|	РегистрНакопления.оуп_ПартииВыпускаПродукции.Остатки(, ДатаСмены = &ДатаСмены
		|	И Спецификация = &Спецификация
		|	И Склад = &Склад) КАК оуп_ПартииВыпускаПродукцииОстатки
		|ГДЕ
		|	оуп_ПартииВыпускаПродукцииОстатки.КоличествоВыпускОстаток < 0";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("ДатаСмены", ДатаСмены);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	если РезультатЗапроса.Пустой() Тогда
		возврат истина;
	иначе 
		возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПроверитьОстатокДанныеВыпуска()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	оуп_ДанныеВыпускаПродукцииОстатки.ДатаСмены,
		|	оуп_ДанныеВыпускаПродукцииОстатки.Спецификация,
		|	оуп_ДанныеВыпускаПродукцииОстатки.Номенклатура,
		|	оуп_ДанныеВыпускаПродукцииОстатки.Склад,
		|	оуп_ДанныеВыпускаПродукцииОстатки.СкладПолучатель,
		|	оуп_ДанныеВыпускаПродукцииОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.оуп_ДанныеВыпускаПродукции.Остатки(, ДатаСмены = &ДатаСмены
		|	И Спецификация = &Спецификация
		|	И Номенклатура = &Номенклатура
		|	И Склад = &Склад
		|	И СкладПолучатель = &СкладПолучатель) КАК оуп_ДанныеВыпускаПродукцииОстатки
		|ГДЕ
		|	оуп_ДанныеВыпускаПродукцииОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	Запрос.УстановитьПараметр("СкладПолучатель", СкладПолучатель);
	Запрос.УстановитьПараметр("ДатаСмены", ДатаСмены);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
	
	
КонецФункции

#КонецОбласти

#КонецЕсли