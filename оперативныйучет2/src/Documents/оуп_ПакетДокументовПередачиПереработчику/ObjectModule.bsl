#Область ОбработчикиСобытий
//@skip-check module-accessibility-at-client
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	попытка
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
			
		СткПараметрыДокументаПереработки = 
			оуп_ПередачаВПереработкуВызовСервера.ЗаполнитьСтруктуруПараметровДокументПереработки(ЭтотОбъект);
		ДокументПередачи = оуп_ПередачаВПереработкуВызовСервера.СформироватьДокументПередачи(СткПараметрыДокументаПереработки, ЭтотОбъект);
		
		ПровестиДокументИДобавитьСсылкуВТЧ(ДокументПередачи);
		
		СткПараметрыДокументаПоступления = оуп_ПередачаВПереработкуВызовСервера.ЗаполнитьСтруктуруПараметровДокументПоступления(ЭтотОбъект);		
		ДокументПоступления = оуп_ПередачаВПереработкуВызовСервера.СформироватьДокументПоступления(СткПараметрыДокументаПоступления, товары);

		ПровестиДокументИДобавитьСсылкуВТЧ(ДокументПоступления);	
		
		Записать();
	
		если ТранзакцияАктивна() Тогда
			ЗафиксироватьТранзакцию();
		Иначе
			ВызватьИсключение "Транзакция не активна";
		 КонецЕсли;
	Исключение
		если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		СтрокаОшибкиЖурнал = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		СтрокаОшибкиКлиент = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации("ПакетДокументовПередачиВПереработку.Проведение", УровеньЖурналаРегистрации.Ошибка,,, СтрокаОшибкиЖурнал);
		Отказ= истина;
		ВызватьИсключение СтрокаОшибкиКлиент;
	КонецПопытки;
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
//@skip-check module-accessibility-at-client
Процедура ПровестиДокументИДобавитьСсылкуВТЧ(Документ)
	Документ.Записать(РежимЗаписиДокумента.Проведение);
	строка = документы.Добавить();
	Строка.Документ = Документ.Ссылка;
КонецПроцедуры
#КонецОбласти
