
&НаКлиенте
перем Дрв;  

&НаКлиенте
перем ИД_устройства;

&НаКлиенте
перем Драйверподключен;


&НаСервереБезКонтекста
Функция получитьВесы()  
УстановитьПривилегированныйРежим(Истина);	
стк = Новый Структура("ip, port, connect, путьДоКомпоненты" );
ЗаполнитьЗначенияСвойств(стк, ПараметрыСеанса.оуп_ТекущаяКонтрольнаяТочка.Весы);
УстановитьПривилегированныйРежим(Ложь);
Возврат стк;

КонецФункции // получитьВесы()


&НаКлиенте                                                                 
Процедура ПриОткрытии(Отказ)
	//Взвешать(Неопределено);      
	сткВесов = получитьВесы();
	Попытка
		ПодключитьВнешнююКомпоненту(сткВесов.путьДоКомпоненты, "ID", ТипВнешнейКомпоненты.Native);
		
		Дрв = Новый("AddIn.ID.MassaKDriverR1C");
		Дрв.УстановитьПараметр("ip", сткВесов.ip);
		Дрв.УстановитьПараметр("port", сткВесов.port);
		Дрв.УстановитьПараметр("connect", сткВесов.connect);
		//
		//Дрв.УстановитьПараметр("com", "COM1");
		//Дрв.УстановитьПараметр("connect", "serial");
		
		
		Драйверподключен = Дрв.Подключить(ИД_устройства);
	Исключение
		Драйверподключен = ложь;
		сообщить(ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры



&НаКлиенте
Процедура Команда1(Команда)
	ИД_устройства = Неопределено;
	Попытка
		ПодключитьВнешнююКомпоненту("C:\MassaKDriverR1Cx64_812.dll", "ID", ТипВнешнейКомпоненты.Native);
		
		Дрв = Новый("AddIn.ID.MassaKDriverR1C");
		Дрв.УстановитьПараметр("ip", "192.168.1.3");
		Дрв.УстановитьПараметр("port", "5001");
		Дрв.УстановитьПараметр("connect", "tcpip");
		//
		//Дрв.УстановитьПараметр("com", "COM1");
		//Дрв.УстановитьПараметр("connect", "serial");
		
		
		Драйверподключен = Дрв.Подключить(ИД_устройства);
	Исключение
		Драйверподключен = ложь;
		сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ВводВесаНаВесах(Команда)
	ИспользованРучнойВвод = Истина;
	текВес = ВесНаВесах;
	если не ЗначениеЗаполнено(СтрокаВес) Тогда 	
		СтрокаВес = строка(ВесНаВесах); 
	КонецЕсли;
	
	если Элементы.КнопкаЗапятаяВесНаВесах.Пометка Тогда 
		СтрокаВес = Строка(СтрокаВес) + ","+ ТекущийЭлемент.Заголовок; 
		текВес = число(СтрокаВес);
		Элементы.КнопкаЗапятаяВесНаВесах.Пометка = не Элементы.КнопкаЗапятаяВесНаВесах.Пометка;
	иначе
		СтрокаВес = Строка(СтрокаВес) + ТекущийЭлемент.Заголовок;
		текВес = число(СтрокаВес);
	КонецЕсли;
	
	ВесНаВесах = текВес;
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоЦелыйПриИзменении(Элемент)
	РасчитатьВесТары();
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоНовыйПриИзменении(Элемент)
	РасчитатьВесТары();
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ШаллерПриИзменении(Элемент)
	РасчитатьВесТары();
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура АльмаПриИзменении(Элемент)
	РасчитатьВесТары();
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ГофрокоробПриИзменении(Элемент)
	РасчитатьВесТары();
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры


&НаКлиенте
Процедура СеткаПриИзменении(Элемент)
	РасчитатьВесТары();
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры


&НаСервере
Процедура РасчитатьВесТары()

	ВесТары =     (Константы.ВесШаллер.Получить() * Шаллер)
				+ (Константы.ВесЯщикЦелый.Получить() * КоличествоЦелый)
				+ (Константы.ВесЯщикНовый.Получить() * КоличествоНовый)
				+ (Константы.весАльма.Получить() * Альма)
				+ (Константы.ВесГофрокороб.Получить() * Гофрокороб)
				+ (Константы.ВесСетка.Получить() * Сетка) 
				+ 15 * Паллет
				+ ТараПроизвольн;
	
КонецПроцедуры // РасчитатьВесТары()

&НаКлиенте
Процедура ОчиститьВводПроизвТара(Команда)
	ТараПроизвольн = 0;
КонецПроцедуры


&НаКлиенте
Процедура ВводПроизвольТары(Элемент)
	текВес = ТараПроизвольн;
	если Элементы.ЗяпятаяПроизВвод.Пометка Тогда 
		текВес = число(Строка(текВес) + ","+ ТекущийЭлемент.Заголовок);
		Элементы.ЗяпятаяПроизВвод.Пометка = не Элементы.ЗяпятаяПроизВвод.Пометка;
	иначе
		текВес = число(Строка(текВес) + ТекущийЭлемент.Заголовок);
	КонецЕсли;
	
	ТараПроизвольн = текВес;
	РасчитатьВесТары();
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры // ВводПроизвольТары()

&НаКлиенте
Процедура ЗапятаяПроизВоод(Команда)
	Элементы.ЗяпятаяПроизВвод.Пометка = не Элементы.ЗяпятаяПроизВвод.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ЗапятаяВесНавесах(Команда)
	Элементы.КнопкаЗапятаяВесНаВесах.Пометка = не Элементы.КнопкаЗапятаяВесНаВесах.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВесНаВесах(Команда)
	ВесНаВесах = 0;
	СтрокаВес = "";
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Взвешать(Команда)
	если Драйверподключен Тогда 
		ПолучитьВес(ВесНаВесах);		
	КонецЕсли;
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьВес(Количество)

	//
	//	Пока ЭтаФорма.ВладелецФормы.Дрв.GetStatus(1,1)="-5003" Цикл
	//		Количество = ЭтаФорма.ВладелецФормы.Дрв.GetWeight(1,1);
	//	КонецЦикла;	
	//	Количество = ЭтаФорма.ВладелецФормы.Дрв.GetWeight(1,1);
       	Дрв.ПолучитьВес(ИД_устройства, Количество)

КонецПроцедуры // ПолучитьВес()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("ПлановыйВес", ПлановыйВес);
	Параметры.Свойство("ПроверятьКоличество", ПроверятьКоличество);
	если Параметры.Свойство("Номенклатура") Тогда 
		если Параметры.Свойство("ТекстЗаголовка") Тогда 
			Элементы.НадписьНоменклатура.Заголовок = 
				строка(Параметры.Номенклатура)+
				" "+
				Параметры.ТекстЗаголовка +
				" план: " 
				+ ПлановыйВес ;

		Иначе 
			
			Элементы.НадписьНоменклатура.Заголовок = строка(Параметры.Номенклатура) + " план: " + ПлановыйВес ;
		КонецЕсли;
		
	КонецЕсли;
	
	
	если ПроверятьКоличество = Истина Тогда 
		Элементы.ПодтверитьВес.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ВесНаВесахПриИзменении(Элемент)
	ЧистыйВес = ВесНаВесах - ВесТары;
	Процент_ = ПолучитьДопустимыйПроцент();
	ДопустимоеОтклонение = (ПлановыйВес / 100) * Процент_;
	ДельтаОтклонения = ПлановыйВес - ЧистыйВес;
	ДельтаОтклонения = ?(ДельтаОтклонения < 0, -ДельтаОтклонения , ДельтаОтклонения );
	если ДельтаОтклонения > ДопустимоеОтклонение Тогда 
		Элементы.ЧистыйВес.ЦветТекстаЗаголовка = WebЦвета.Красный;
	Иначе 
		Элементы.ЧистыйВес.ЦветТекстаЗаголовка = WebЦвета.ЗеленаяЛужайка;
	КонецЕсли;
	
	если ПроверятьКоличество тогда 
		если ДельтаОтклонения < ДопустимоеОтклонение Тогда 
			Элементы.ПодтверитьВес.Видимость = Истина;
		КонецЕсли;
	
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТараПроизвольнПриИзменении(Элемент)
	
КонецПроцедуры

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервере
Функция ПолучитьДопустимыйПроцент()

	Возврат Константы.ПроцентДопустимогоОтклонения.Получить();

КонецФункции // ПолучитьДопустимыйПроцент()

&НаКлиенте
Процедура ПодтверитьВес(Команда)
	// Вставить содержимое обработчика.
	сткВозврат = новый Структура;
	сткВозврат.Вставить("ИспользованРучнойВвод", ИспользованРучнойВвод);
	сткВозврат.Вставить("Комментарий",			 "Подтверждение приема товара.");
	
	если ПроверятьКоличество Тогда 
		сткВозврат.Вставить("Количество", ПлановыйВес);
		//ЭтаФорма.Закрыть(ПлановыйВес);
	Иначе 
		сткВозврат.Вставить("Количество", ЧистыйВес);
		//ЭтаФорма.Закрыть(ЧистыйВес);
	КонецЕсли;
	
	если Отнять и ЧистыйВес > ПлановыйВес Тогда
		ПоказатьПредупреждение(, "Превышение планового количества, отнять нельзя!");
		Возврат;		
	КонецЕсли;
	
	если отнять  Тогда
		сткВозврат.Количество = - сткВозврат.Количество;	
	КонецЕсли;
	
	
	Закрыть(сткВозврат);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	ЭтаФорма.Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Затарить(Команда)
	Взвешать(Неопределено);
	ВесТары = ВесТары + ВесНаВесах;
	ВесНаВесах = 0;
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗанулитьТару(Команда)
	ВесТары = 0;
	ВесНаВесахПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Выйти(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	если Драйверподключен Тогда 
		Дрв.Отключить(ИД_устройства);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПаллетПриИзменении(Элемент)
	РасчитатьВесТары();
	ВесНаВесахПриИзменении(Неопределено);

КонецПроцедуры
